/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package action.management;

import java.util.Date;
import java.util.List;
import java.util.Map;

import java.util.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import model.management.BoLinksSort;
import model.management.BoSpecial;
import model.system.PageList;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.DynaActionForm;

import service.management.BoLinksService;
import service.management.BoLinksSortService;
import service.management.BoSpecialService;
import service.news.BoNewsService;
import factory.ServiceFactory;

/**
 * MyEclipse Struts Creation date: 02-13-2009 XDoclet definition:
 * 
 * @struts.action parameter="action" validate="true"
 * @struts.action-forward name="toSpecialManagePage"
 *                        path="/WEB-INF/jsp/management/special/special_manage.jsp"
 */
public class SpecialAction extends Action {
	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * 
	 */

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		// System.out.println(request.getParameter("action"));
		// 转到专题管理页面
		if (request.getParameter("action").equals("toSpecialManagePage")) {
			BoSpecialService s = (BoSpecialService) ServiceFactory.instance()
					.getService("boSpecialService");
			List list = s.getAllBoSpecial();
			request.setAttribute("list", list);
			boolean isnull = s.isnull();
			request.setAttribute("isnull", isnull);
			if (s.isnull()) {
				request.setAttribute("remind", "专题目录为空");
			}
			return mapping.findForward("toSpecialManagePage");
		} 
		// 转到专题添加页面
		else if (request.getParameter("action").equals("toAddSpecialPage")) {
			return mapping.findForward("toAddSpecialPage");
		}
		// 转到专题小类添加页面
		else if (request.getParameter("action").equals("toAddSmallSpecialPage")) {
			BoSpecialService s = (BoSpecialService) ServiceFactory.instance()
					.getService("boSpecialService");
			List list = s.getAllBoSpecial();
			request.setAttribute("bigSpecial", list);
			return mapping.findForward("toAddSmallSpecialPage");
		}

		// 转到小类管理页面
		if (request.getParameter("action").equals("toSmallManagePage")) {
			BoSpecialService s = (BoSpecialService) ServiceFactory.instance()
					.getService("boSpecialService");
			List list = s.getSmallBoSpecial();
			request.setAttribute("list", list);
			boolean isnull = s.isnull();
			request.setAttribute("isnull", isnull);
			if (s.isnull()) {
				request.setAttribute("remind", "专题目录为空");

			}
			return mapping.findForward("toSmallManagePage");
		}

		// 添加专题
		else if (request.getParameter("action").equals("addSpecial")) {
			if (request.getParameter("name").length() > 0) {
				BoSpecialService s = (BoSpecialService) ServiceFactory
						.instance().getService("boSpecialService");
				BoSpecial n = new BoSpecial();
				n.setName(request.getParameter("name"));
				n.setEnname(request.getParameter("enname"));
				n.setCreatetime(new Date());
				n.setParentid("0");
				if (s.isnull()) {
					n.setSerial(1);
				} else {
					n.setSerial(s.getMaxSerial() + 1);
				}
				s.addBoSpecial(n);
				request.setAttribute("right", "添加成功");
			} else {
				request.setAttribute("remind", "不能为空");
			}
			return mapping.findForward("toAddSpecialPage");
		}

		// 添加小类专题
		else if (request.getParameter("action").equals("addSmallSpecial")) {
			if (request.getParameter("name").length() > 0) {
				BoSpecialService s = (BoSpecialService) ServiceFactory
						.instance().getService("boSpecialService");
				BoSpecial n = new BoSpecial();
				n.setName(request.getParameter("name"));
				n.setEnname(request.getParameter("enname"));
				n.setParentid(request.getParameter("parentId"));
				n.setPrename(s.getBoSpecial(request.getParameter("parentId"))
						.getName());
				n.setPreenname(s.getBoSpecial(request.getParameter("parentId"))
						.getEnname());
				n.setCreatetime(new Date());
				if (s.isnull()) {
					n.setSerial(1);
				} else {
					n.setSerial(s.getMaxSerial() + 1);
				}
				s.addBoSpecial(n);
				request.setAttribute("right", "添加成功");
			} else {
				request.setAttribute("remind", "不能为空");
			}
			return mapping.findForward("toAddSmallSpecialPage");
		}
		// 转到修改专题的页面
		else if (request.getParameter("action").equals("toModifySpecialPage")) {
			BoSpecialService s = (BoSpecialService) ServiceFactory.instance()
					.getService("boSpecialService");
			String id = request.getParameter("id");
			BoSpecial b = s.getBoSpecial(id);
			request.setAttribute("n", b);
			return mapping.findForward("toModifySpecialPage");
		}
		// 修改专题
		else if (request.getParameter("action").equals("modifySpecial")) {
			if (request.getParameter("name").length() > 0) {
				BoSpecialService s = (BoSpecialService) ServiceFactory
						.instance().getService("boSpecialService");
				BoSpecial b = s.getBoSpecial(request.getParameter("id"));
				request.setAttribute("n", b);
				b.setEnname(request.getParameter("enname"));
				b.setName(request.getParameter("name"));
				s.updateBoSpecial(b);

				List sl = s.getSmallBoSpecialByPid(request.getParameter("id"));
				for (Iterator it = sl.iterator(); it.hasNext();) {
					BoSpecial b1 = (BoSpecial) it.next();
					b1.setPreenname(request.getParameter("enname"));
					b1.setPrename(request.getParameter("name"));
					s.updateBoSpecial(b1);
				}

				request.setAttribute("right", "修改成功");
				request.setAttribute("n", b);
			} else {
				request.setAttribute("remind", "输入不能为空,添加不成功");
			}
			// return mapping.findForward("toModifyLinksSortPage");
			return new ActionForward(
					"/specialAction.do?action=toModifySpecialPage");
		}
		// 转到修改小类页面
		else if (request.getParameter("action").equals(
				"toModifySmallSpecialPage")) {
			BoSpecialService s = (BoSpecialService) ServiceFactory.instance()
					.getService("boSpecialService");
			String id = request.getParameter("id");
			BoSpecial b = s.getBoSpecial(id);
			request.setAttribute("n", b);
			List list = s.getAllBoSpecial();
			request.setAttribute("bigSpecial", list);
			return mapping.findForward("toModifySmallSpecialPage");
		}
		// 修改小类
		else if (request.getParameter("action").equals("modifySmallSpecial")) {
			if (request.getParameter("name").length() > 0) {
				BoSpecialService s = (BoSpecialService) ServiceFactory
						.instance().getService("boSpecialService");
				BoSpecial b = s.getBoSpecial(request.getParameter("id"));
				request.setAttribute("n", b);
				b.setEnname(request.getParameter("enname"));
				b.setName(request.getParameter("name"));
				b.setParentid(request.getParameter("parentId"));
				b.setPrename(s.getBoSpecial(request.getParameter("parentId"))
						.getName());
				b.setPreenname(s.getBoSpecial(request.getParameter("parentId"))
						.getEnname());
				s.updateBoSpecial(b);
				request.setAttribute("right", "修改成功");
				request.setAttribute("n", b);
			} else {
				request.setAttribute("remind", "输入不能为空,添加不成功");
			}
			// return mapping.findForward("toModifyLinksSortPage");
			return new ActionForward(
					"/specialAction.do?action=toModifySmallSpecialPage");
		}
		// 专题上移
		else if (request.getParameter("action").equals("SpecialMoveUp")) {

			BoSpecialService s = (BoSpecialService) ServiceFactory.instance()
					.getService("boSpecialService");
			s.moveUp(request.getParameter("id"));
			return new ActionForward(
					"/specialAction.do?action=toSpecialManagePage");
		}
		// 专题下移
		else if (request.getParameter("action").equals("SpecialMoveDown")) {

			BoSpecialService s = (BoSpecialService) ServiceFactory.instance()
					.getService("boSpecialService");

			s.moveDown(request.getParameter("id"));
			return new ActionForward(
					"/specialAction.do?action=toSpecialManagePage");
		}
		// 删除专题
		else if (request.getParameter("action").equals("deleteSpecial")) {
			BoNewsService ns = (BoNewsService) ServiceFactory.instance()
					.getService("boNewsService");
			BoSpecialService s = (BoSpecialService) ServiceFactory.instance()
					.getService("boSpecialService");

			if (request.getParameter("vote").equals("b")) {

				if (ns.isSpecialnull(request.getParameter("id"))) {
					if (s.getSpecialNumByPid(request.getParameter("id")) == 0) {
						s.deleteBoSpecial(request.getParameter("id"));
					} else { 
						
						request.setAttribute("remind", "此专题下有小类，请先删除对应的小类");
					}
				} else {
					request.setAttribute("remind", "此专题下有新闻，请先删除对应的新闻");
				}
			} 
			
			return new ActionForward(
					"/specialAction.do?action=toSpecialManagePage");

		}

		// 删除小类
		else if (request.getParameter("action").equals("deleteSmall")) {
			BoNewsService ns = (BoNewsService) ServiceFactory.instance()
			.getService("boNewsService");
	BoSpecialService s = (BoSpecialService) ServiceFactory.instance()
			.getService("boSpecialService");
			if (request.getParameter("vote").equals("s")) 	
			{
				if (ns.isSpecialnullSmall(request.getParameter("id"))) {
					System.out.println(ns.isSpecialnullSmall(request.getParameter("id")));
					s.deleteBoSpecial(request.getParameter("id"));

				} else {
					request.setAttribute("remind", "此小类下有新闻，请先删除对应的新闻");
				}
			}
			return new ActionForward(
					"/specialAction.do?action=toSmallManagePage");

		}
		return null;
	}

}