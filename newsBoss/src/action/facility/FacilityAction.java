/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package action.facility;

import java.io.FileOutputStream;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import model.facility.BoFacility;
import model.facility.BoFacilityType;
import model.system.PageList;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.DynaActionForm;
import org.apache.struts.upload.FormFile;

import service.facility.BoFacilityService;
import service.facility.BoFacilityTypeService;
import factory.ServiceFactory;

public class FacilityAction extends Action {

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {

		if(request.getParameter("action").equals("toManagePage")){
			manageInit( mapping,form,request,  response) ;
			return mapping.findForward("toManagePage");		
		}
		
		else if(request.getParameter("action").equals("toAddPage")){
			addModifyInit( mapping,form,request,  response);
			return mapping.findForward("toAddPage");		
		}
		
		else if(request.getParameter("action").equals("toModifyPage")){
			BoFacilityService s = (BoFacilityService)ServiceFactory.instance().getService("boFacilityService");		
			String id = request.getParameter("id");
			BoFacility n = s.getBoFacility(id);
			request.setAttribute("n", n);
			addModifyInit( mapping,form,request,  response);
			return mapping.findForward("toModifyPage");		
		}
		
		else if(request.getParameter("action").equals("modify")){
			BoFacilityService ps = (BoFacilityService)ServiceFactory.instance().getService("boFacilityService");		
			String id = request.getParameter("id");
			BoFacility p = ps.getBoFacility(id);
			DynaActionForm df = (DynaActionForm)form;     
			String name = df.getString("name");
			String fid = df.getString("fid");
			String price = df.getString("price");
			String salePrice = df.getString("salePrice");
			String size = df.getString("size");
			String num = df.getString("num");
			String des = df.getString("des");
			String  enname= df.getString("enname");
			FormFile file = (FormFile)df.get("fileField");
			p.setName(name);
			BoFacilityType f = new BoFacilityType();
			f.setId(fid);
			p.setBoFacilityType(f);
			p.setPrice(price);
			p.setSalePrice(salePrice);
			p.setSize(size);
			p.setNum(num);
			p.setDes(des);
			p.setEnname(enname);
			if(file.getFileSize()>0)
			{
				  java.io.File bigDelFile = new java.io.File(servlet.getServletContext().getRealPath("/")+"\\upload\\facility\\"+p.getBimage());
			      bigDelFile.delete();
			      java.io.File smallDelFile = new java.io.File(servlet.getServletContext().getRealPath("/")+"\\upload\\facility\\"+p.getSimage());
			      smallDelFile.delete();
			      
			      String ext = file.getFileName().substring(file.getFileName().indexOf("."),file.getFileName().length());
					String bgiFileName = java.util.UUID.randomUUID().toString()+ext;
					//System.out.println("==="+bgiFileName);
					String smallName ="";
					try
					{
					byte[] content = file.getFileData();
					FileOutputStream out = new FileOutputStream(servlet.getServletContext().getRealPath("/")+"\\upload\\facility\\"+bgiFileName);
					//System.out.println("文件开始上传！");
					out.write(content);
					out.close();
					//System.out.println("文件开始成功！");
					
					smallName = util.image.ImageUtil.getSmallPic(servlet.getServletContext().getRealPath("/")+"\\upload\\facility\\", bgiFileName, 60);
					p.setBimage(bgiFileName);
					p.setSimage(smallName);
					}catch(Exception e)
					{
						//System.out.println("文件上传失败！");
						e.printStackTrace();
					}
			}
			
			ps.updateBoFacility(p);
			//manageInit( mapping,form,request,  response) ;
			request.setAttribute("right", "修改成功！");
			return mapping.findForward("toManagePage");		
		}
		
		else if(request.getParameter("action").equals("add")){
			BoFacilityService ps = (BoFacilityService)ServiceFactory.instance().getService("boFacilityService");		

			BoFacility p = new BoFacility();
			DynaActionForm df = (DynaActionForm)form;     
			String name = df.getString("name");
			String fid = df.getString("fid");
			String price = df.getString("price");
			String salePrice = df.getString("salePrice");
			String size = df.getString("size");
			String num = df.getString("num");
			String des = df.getString("des");
			String  enname= df.getString("enname");

			FormFile file = (FormFile)df.get("fileField");
			if(file.getFileSize()>0)
			{
			String ext = file.getFileName().substring(file.getFileName().indexOf("."),file.getFileName().length());
			String bgiFileName = java.util.UUID.randomUUID().toString()+ext;
			//System.out.println("==="+bgiFileName);
			String smallName ="";
			try
			{
			byte[] content = file.getFileData();
			FileOutputStream out = new FileOutputStream(servlet.getServletContext().getRealPath("/")+"\\upload\\facility\\"+bgiFileName);
			//System.out.println("文件开始上传！");
			out.write(content);
			out.close();
			//System.out.println("文件开始成功！");
			
			smallName = util.image.ImageUtil.getSmallPic(servlet.getServletContext().getRealPath("/")+"\\upload\\facility\\", bgiFileName, 60);
			p.setBimage(bgiFileName);
			p.setSimage(smallName);
			}catch(Exception e)
			{
				//System.out.println("文件上传失败！");
				e.printStackTrace();
			}

			//manageInit( mapping,form,request,  response) ;
			}
			else
			{
				p.setSimage("");
				p.setBimage("");
				//System.out.println("=========没上传文件啊");
				
			}
			p.setName(name);
			BoFacilityType f = new BoFacilityType();
			f.setId(fid);
			p.setBoFacilityType(f);
			p.setPrice(price);
			p.setSalePrice(salePrice);
			p.setSize(size);
			p.setNum(num);
			p.setDes(des);
			p.setEnname(enname);

			ps.addBoFacility(p);
			request.setAttribute("right", "添加成功！");
			return mapping.findForward("toManagePage");		
		}
		
		
		else if(request.getParameter("action").equals("delete")){
			
			
			
			String id = request.getParameter("id");
			BoFacilityService boFacilityService = (BoFacilityService)ServiceFactory.instance().getService("boFacilityService");		
			BoFacility b = boFacilityService.getBoFacility(id);
			try{
			if(b.getBimage().length()>0&&b.getSimage().length()>0)
			{
				
				      java.io.File bigDelFile = new java.io.File(servlet.getServletContext().getRealPath("/")+"\\upload\\facility\\"+b.getBimage());
				      bigDelFile.delete();
				      java.io.File smallDelFile = new java.io.File(servlet.getServletContext().getRealPath("/")+"\\upload\\facility\\"+b.getSimage());
				      smallDelFile.delete();
				      //System.out.println("删除文件成功！");

			}
			}catch(Exception e)
			{
				e.printStackTrace();
			}
			boFacilityService.deleteBoFacility(id);
			
			manageInit( mapping,form,request,  response) ;
			request.setAttribute("right", "删除成功！");
			return mapping.findForward("toManagePage");		
		}
		
		return null;
	}
	
	public void manageInit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		DynaActionForm pageListForm = (DynaActionForm)form;
		BoFacilityService s = (BoFacilityService)ServiceFactory.instance().getService("boFacilityService");		
		PageList pageList = new PageList();
		if(pageListForm.get("fetch")!=null){
		pageList.setFetch(Integer.parseInt(pageListForm.get("fetch").toString()));
		}
		if(pageListForm.get("pagenum")!=null){
		pageList.setPagenum(Integer.parseInt(pageListForm.get("pagenum").toString()));	
		}
		if(pageListForm.get("q1")!=null){
			pageList.setQ1(pageListForm.get("q1").toString());
		}
		Map map = s.getBoFacilityMap(pageList);
		pageList = (PageList)map.get("pageList");
		List list = (List)map.get("list");
		
		request.setAttribute("pageList", pageList);			
		request.setAttribute("list", list);
		
		BoFacilityTypeService s1 = (BoFacilityTypeService)ServiceFactory.instance().getService("boFacilityTypeService");		
		List flist = s1.getAllBoFacilityType();
		request.setAttribute("flist", flist);
		
	}
	
	public void addModifyInit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		BoFacilityTypeService s = (BoFacilityTypeService)ServiceFactory.instance().getService("boFacilityTypeService");		
		List flist = s.getAllBoFacilityType();
		request.setAttribute("flist", flist);
		
	}
}



