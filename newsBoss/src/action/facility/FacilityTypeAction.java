/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package action.facility;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import model.facility.BoFacilityType;
import model.management.BoNavigation;
import model.system.PageList;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.DynaActionForm;

import service.facility.BoFacilityTypeService;
import service.management.BoNavigationService;
import factory.ServiceFactory;

public class FacilityTypeAction extends Action {

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {

		if(request.getParameter("action").equals("toManagePage")){
			manageInit( mapping,form,request,  response) ;
			return mapping.findForward("toManagePage");		
		}
		
		else if(request.getParameter("action").equals("toAddPage")){
			BoNavigationService boNavigationService = (BoNavigationService)ServiceFactory.instance().getService("boNavigationService");				
			List customList = boNavigationService.getCustomNavigatorList();
			request.setAttribute("customList", customList);
			return mapping.findForward("toAddPage");		
		}
		
		else if(request.getParameter("action").equals("toModifyPage")){
			BoFacilityTypeService s = (BoFacilityTypeService)ServiceFactory.instance().getService("boFacilityTypeService");		
			BoNavigationService boNavigationService = (BoNavigationService)ServiceFactory.instance().getService("boNavigationService");				
			List customList = boNavigationService.getCustomNavigatorList();
			request.setAttribute("customList", customList);
			String id = request.getParameter("id");
			BoFacilityType n = s.getBoFacilityType(id);
			request.setAttribute("n", n);
			return mapping.findForward("toModifyPage");		
		}
		
		else if(request.getParameter("action").equals("modify")){
			BoFacilityTypeService ps = (BoFacilityTypeService)ServiceFactory.instance().getService("boFacilityTypeService");		
			String id = request.getParameter("id");
			BoFacilityType p = ps.getBoFacilityType(id);
			String name = request.getParameter("name");
			String des = request.getParameter("des");
			String nid = request.getParameter("nid");
			String enname = request.getParameter("enname");	
			BoNavigation n = new BoNavigation();
			n.setId(nid);
			p.setBoNavigation(n);
			p.setDes(des);
			p.setEnname(enname);
			p.setName(name);
			ps.updateBoFacilityType(p);
			manageInit( mapping,form,request,  response) ;
			request.setAttribute("right", "修改成功！");
			return mapping.findForward("toManagePage");		
		}
		
		else if(request.getParameter("action").equals("add")){
			BoFacilityTypeService ps = (BoFacilityTypeService)ServiceFactory.instance().getService("boFacilityTypeService");		

			BoFacilityType p = new BoFacilityType();
			String name = request.getParameter("name");
			String nid = request.getParameter("nid");
			String des = request.getParameter("des");
			String enname = request.getParameter("enname");	
			BoNavigation n = new BoNavigation();
			n.setId(nid);
			p.setBoNavigation(n);
			p.setDes(des);
			p.setName(name);
			p.setEnname(enname);

			if(ps.hasNid(nid))
			{
				BoFacilityType b = ps.getByNid(nid);
				b.setDes(des);
				b.setName(name);
				ps.updateBoFacilityType(b);
			}
			else
			{
				ps.addBoFacilityType(p);

			}
			
			manageInit( mapping,form,request,  response) ;
			request.setAttribute("right", "添加成功！");

			return mapping.findForward("toManagePage");		
		}
		
		
		else if(request.getParameter("action").equals("delete")){
			
			String id = request.getParameter("id");
			BoFacilityTypeService boFacilityTypeService = (BoFacilityTypeService)ServiceFactory.instance().getService("boFacilityTypeService");				
			if(boFacilityTypeService.canDelete(id))
			{
				boFacilityTypeService.deleteBoFacilityType(id);
				request.setAttribute("right", "删除成功！");

			}
			
			else 
			{
				request.setAttribute("remind", "不能删除，请先删除该分类下的服务设施！");
			}
			manageInit( mapping,form,request,  response) ;

			return mapping.findForward("toManagePage");		
		}
		
		return null;
	}
	
	public void manageInit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		DynaActionForm pageListForm = (DynaActionForm)form;
		BoFacilityTypeService s = (BoFacilityTypeService)ServiceFactory.instance().getService("boFacilityTypeService");		
		PageList pageList = new PageList();
		if(pageListForm.get("fetch")!=null){
		pageList.setFetch(Integer.parseInt(pageListForm.get("fetch").toString()));
		}
		if(pageListForm.get("pagenum")!=null){
		pageList.setPagenum(Integer.parseInt(pageListForm.get("pagenum").toString()));	
		}
		
		Map map = s.getBoFacilityTypeMap(pageList);
		pageList = (PageList)map.get("pageList");
		List list = (List)map.get("list");
		
		request.setAttribute("pageList", pageList);			
		request.setAttribute("list", list);
	}
}



